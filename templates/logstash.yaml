{{- if .Values.logstash.enabled }}
# Logstash Pipeline ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "elk-stack.fullname" . }}-logstash-pipeline
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "elk-stack.labels" . | nindent 4 }}
data:
  logstash.yml: |
    node.name: ${HOSTNAME}
    path.config: /usr/share/logstash/pipeline
    xpack.monitoring.enabled: false
    pipeline.workers: 1
    pipeline.batch.size: 125
    pipeline.batch.delay: 50
    api.http.host: "0.0.0.0"

  pipeline.conf: |
    # Remove any hidden characters or BOM if present
    input {
      beats {
        port => 5044
        host => "0.0.0.0"
      }
    }

    filter {
      if [fields][log_type] == "apache" {
        grok {
          match => { "message" => "%{COMBINEDAPACHELOG}" }
        }
      }
      
      if [kubernetes] {
        mutate {
          add_field => { 
            "k8s_namespace" => "%{[kubernetes][namespace]}"
            "k8s_pod" => "%{[kubernetes][pod][name]}"
            "k8s_container" => "%{[kubernetes][container][name]}"
          }
        }
      }
    }

    output {
      elasticsearch {
        hosts => ["${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"]
        user => "${ELASTICSEARCH_USER}"
        password => "${ELASTICSEARCH_PASSWORD}"
        ssl_enabled => ${ELASTICSEARCH_SSL_ENABLED}
        ssl_certificate_authorities => ["/usr/share/logstash/config/certs/ca.crt"]
        index => "logstash-%{+YYYY.MM.dd}"
      }
      stdout { codec => rubydebug }
    }
---
# Logstash Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "elk-stack.fullname" . }}-logstash
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "elk-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: logstash
spec:
  replicas: {{ .Values.logstash.replicas }}
  selector:
    matchLabels:
      {{- include "elk-stack.logstash.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "elk-stack.logstash.selectorLabels" . | nindent 8 }}
    spec:
      # Add pod level security context
      securityContext:
        fsGroup: 1000
      
      # Add initContainer to set permissions and copy config files
      initContainers:
      - name: set-permissions
        image: busybox
        command: ['sh', '-c']
        args:
          - |
            mkdir -p /usr/share/logstash/config /usr/share/logstash/pipeline /usr/share/logstash/data
            cp /tmp/config/logstash.yml /usr/share/logstash/config/logstash.yml
            cp /tmp/pipeline/pipeline.conf /usr/share/logstash/pipeline/pipeline.conf
            chown -R 1000:1000 /usr/share/logstash/data /usr/share/logstash/config /usr/share/logstash/pipeline
            chmod -R 755 /usr/share/logstash/data /usr/share/logstash/config /usr/share/logstash/pipeline
        volumeMounts:
        - name: logstash-data
          mountPath: /usr/share/logstash/data
        - name: logstash-config
          mountPath: /usr/share/logstash/config
        - name: logstash-pipeline
          mountPath: /usr/share/logstash/pipeline
        - name: config-source
          mountPath: /tmp/config
        - name: pipeline-source
          mountPath: /tmp/pipeline
        securityContext:
          runAsUser: 0

      containers:
      - name: logstash
        image: {{ .Values.logstash.image.repository }}:{{ .Values.logstash.image.tag }}
        imagePullPolicy: {{ .Values.logstash.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.logstash.service.port }}
          name: beats
          protocol: TCP
        env:
        - name: LS_JAVA_OPTS
          value: "-Xms512m -Xmx1024m"
        - name: LOG_LEVEL
          value: "debug"
        - name: ELASTICSEARCH_HOST
          value: {{ .Values.elasticsearch.service.name | quote }}
        - name: ELASTICSEARCH_PORT
          value: {{ .Values.elasticsearch.service.httpPort | quote }}
        - name: ELASTICSEARCH_USER
          value: "elastic"
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "elk-stack.fullname" . }}-elasticsearch-secrets
              key: password
        - name: ELASTICSEARCH_SSL_ENABLED
          value: {{ .Values.elasticsearch.ssl.enabled | quote }}
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        volumeMounts:
        - name: logstash-config
          mountPath: /usr/share/logstash/config
        - name: logstash-pipeline
          mountPath: /usr/share/logstash/pipeline
        - name: logstash-data
          mountPath: /usr/share/logstash/data
        {{- if .Values.elasticsearch.ssl.enabled }}
        - name: certs
          mountPath: /usr/share/logstash/config/certs
          readOnly: true
        {{- end }}
        resources:
          {{- toYaml .Values.logstash.resources | nindent 10 }}
        readinessProbe:
          tcpSocket:
            port: beats
          initialDelaySeconds: 60
          periodSeconds: 20
        livenessProbe:
          tcpSocket:
            port: beats
          initialDelaySeconds: 120
          periodSeconds: 30
      volumes:
      - name: config-source
        configMap:
          name: {{ include "elk-stack.fullname" . }}-logstash-pipeline
          items:
            - key: logstash.yml
              path: logstash.yml
      - name: pipeline-source
        configMap:
          name: {{ include "elk-stack.fullname" . }}-logstash-pipeline
          items:
            - key: pipeline.conf
              path: pipeline.conf
      - name: logstash-config
        emptyDir: {}
      - name: logstash-pipeline
        emptyDir: {}
      - name: logstash-data
        emptyDir: {}
      {{- if .Values.elasticsearch.ssl.enabled }}
      - name: certs
        secret:
          secretName: {{ include "elk-stack.fullname" . }}-certs
      {{- end }}
---
# Logstash Service
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.logstash.service.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "elk-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: logstash
spec:
  selector:
    {{- include "elk-stack.logstash.selectorLabels" . | nindent 4 }}
  ports:
    - name: beats
      protocol: TCP
      port: {{ .Values.logstash.service.port }}
      targetPort: beats
  type: {{ .Values.logstash.service.type }}
{{- end }}